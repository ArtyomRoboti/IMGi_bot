import logging

from aiogram import types, Bot

from IMGi_bot import actions
from IMGi_bot import config
from IMGi_bot import keyboards
from IMGi_bot import text_answer
from IMGi_bot.DB import db_photo, db_tech_image

bot = Bot(config.BOT_TOKEN)


# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def all_image_user(message: types.Message):
    logging.info(f'User {message.from_user.id} scans files')
    # –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    all_file = db_photo.get_all_photo(message.from_user.id)
    message_name_file: str = ''
    for name_image in all_file:
        for name in name_image:
            message_name_file += f'{str(name)}\n'

    # –í—ã–≤–µ—Å—Ç–∏ –∏–º–µ–Ω–∞ –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.answer(text=f'<b>–í–∞—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</b>üìÅ\n<em>{message_name_file}</em>',
                         parse_mode='HTML',
                         reply_markup=types.ReplyKeyboardRemove())
    await message.answer(text=text_answer.NAME_FILE_SHOWN, parse_mode='HTML', reply_markup=keyboards.kb_cancel_sh)
    await actions.ShownImageActions.name_image.set()

# –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
async def exit_sh_file(call: types.CallbackQuery, state):
    await call.message.delete()
    await state.finish()
    await call.message.answer(text=text_answer.CANCEL_IMAGE_BOT, parse_mode='HTML', reply_markup=keyboards.kb_main_menu)

# –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –∂–¥—ë–º –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–ª–∏ –æ—Ç–º–µ–Ω—ã –ø–æ–∫–∞–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
async def actions_shown_image(message: types.Message, state):
    await message.delete()
    await state.update_data(name_image=message.text)
    data_image = await state.get_data() # –ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å
    path_local = 'D:/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/Urban University/DIPLOM_project/IMGi_bot/generic_photo_user'
    try:
        with open(f"{path_local}/{message.from_user.id}/{data_image['name_image']}", mode='rb') as file_image:
            await bot.send_photo(chat_id=message.from_user.id,
                                 photo=file_image,
                                 reply_markup=keyboards.kb_open_image)
            # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            db_tech_image.add_current_image(message.from_user.id, data_image['name_image'])
            logging.info(f"User {message.from_user.id} open file {data_image['name_image']}")
            await state.finish()
    except FileNotFoundError:
        await message.answer(text=f"‚ùå<b>–§–ê–ô–õ–ê <em>\"{data_image['name_image']}\"</em> –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢</b>‚ùå",
                             parse_mode='HTML')
        logging.info(f"User {message.from_user.id} the file does not exist {data_image['name_image']}")

# –û—Ç–º–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async def cancel_current_image(call: types.CallbackQuery):
    await call.message.delete()
    # –ó–∞—Ç–µ—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    db_tech_image.add_current_image(call.from_user.id, None)
    await call.message.answer(text=text_answer.OTHER_IMAGE, parse_mode='HTML', reply_markup=keyboards.kb_cancel_sh)
    await actions.ShownImageActions.name_image.set()

#–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
async def save_current_image(call: types.CallbackQuery):
    # –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    await call.message.delete()
    image_current = db_tech_image.get_current_image(call.from_user.id)
    path_local = f'D:/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/Urban University/DIPLOM_project/IMGi_bot/generic_photo_user/{call.from_user.id}/{image_current[0]}'
    with open(path_local, mode='rb') as file_image:
        await bot.send_document(chat_id=call.from_user.id,
                                document=file_image,
                                reply_markup=keyboards.kb_main_menu)
    # –ó–∞—Ç–µ—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Ç–∞–±–ª–∏—Ü–µ —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    logging.info(f'File {image_current[0]} downloaded successfully User: {call.from_user.id}')
    db_tech_image.add_current_image(call.from_user.id, None)


